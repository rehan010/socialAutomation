"""
Django settings for Automatation project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-=ut$#i*am-b5@gw!qm204o)b*%rs3h10@qs_*5y2ev^fqp6m(y'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = ['localhost','127.0.0.1']
ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'corsheaders',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.instagram',
    'allauth.socialaccount.providers.google',
    'sslserver',
    'allauth.socialaccount.providers.linkedin_oauth2',

    'app'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
CORS_ALLOW_ALL_ORIGINS = True

CSRF_TRUSTED_ORIGINS=['https://c681-72-255-15-110.ngrok-free.app']
# CORS_URLS_REGEX = r'^/accounts/register/.*$'

LOGIN_REDIRECT_URL = "dashboard"
LOGOUT_REDIRECT_URL = "dashboard"


ROOT_URLCONF = 'Automatation.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['app/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
AUTHENTICATION_BACKENDS = [
    # ...
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
    # 'allauth.socialaccount.providers.facebook.FacebookOAuth2Provider',
    # ...
]

WSGI_APPLICATION = 'Automatation.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

SOCIALACCOUNT_ADAPTER = 'app.linkedin_adapter.MyAdapter'
SOCIALACCOUNT_STORE_TOKENS=True

# Provider specific settings
SOCIALACCOUNT_PROVIDERS = {
    'facebook': {
        # For each OAuth based provider, either add a ``SocialApp``
        # (``socialaccount`` app) containing the required client
        # credentials, or list them here:
        'APP': {
            'client_id': '283757437433759',
            'secret': 'b14ce3e0baf2009e7f50fe251f10a556',
            'key': ''
        }
    },
    'instagram': {
        # For each OAuth based provider, either add a ``SocialApp``
        # (``socialaccount`` app) containing the required client
        # credentials, or list them here:
        'APP': {
            'client_id': '1284529915822654',
            'secret': '9899cd3f89be5d7e6f22197134abd603',
            'key': ''
        }
    },
    'google': {
        # For each OAuth based provider, either add a ``SocialApp``
        # (``socialaccount`` app) containing the required client
        # credentials, or list them here:
        'APP': {
            'client_id': '33836610262-gvtpcrjpbdefm0td6e0g7e4c76gut9s8.apps.googleusercontent.com',
            'secret': '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',
            'key': ''
        }
    },

    'linkedin_oauth2': {

        # For each OAuth based provider, either add a ``SocialApp``
        # (``socialaccount`` app) containing the required client
        # credentials, or list them here:
        'APP': {
            # 'adapter':'app.linkedin_adapter.CustomLinkedInOAuth2Adapter',
            'client_id': '77vq11fwjcec5h',
            'secret': '8wcTHLij6qhYxykW',
            'key': '',

        },
        'SCOPE': [
            'r_emailaddress',
            'r_liteprofile'
        ],
        # 'PROFILE_FIELDS': [
        #     'id',
        #     'first-name',
        #     'last-name',
        #     'email-address',
        #     'picture-url',
        #     'public-profile-url',
        # ],


    },
}

SITE_ID = 1

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIR = [
        os.path.join(BASE_DIR, 'static')
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
EMAIL_HOST = "localhost"
EMAIL_PORT = 1025
if DEBUG:
    SSL_CERTIFICATE = '/Users/apple/PycharmProjects/WebAutomation/Automatation/certificate.crt'
    SSL_KEY = '/Users/apple/PycharmProjects/WebAutomation/Automatation/private.key'

    # Optional: Set the SSL/TLS port (default is 8443)
    SSL_PORT = 443

    # Optional: Set the SSL/TLS host (default is 'localhost')
    SSL_HOST = 'localhost'

    # Set the SSL/TLS certificate paths
    # SSLCERT = '/Users/apple/PycharmProjects/WebAutomation/Automatation/certificate.crt'
    # SSLKEY = '/Users/apple/PycharmProjects/WebAutomation/Automatation/private.key'
    #
    # # Configure the SSL/TLS server
    # SSLSERVER_CERT = SSLCERT
    # SSLSERVER_KEY = SSLKEY
    SSL_SERVER_REDIRECT_HTTPS = True
